name: Maven Release

# Performs a Maven release when a new GitHub release has been published
on:
  release:
    types: [ published ]

jobs:
  publish:
    name: Maven Artifact Publisher
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ "17" ]
        maven: [ "3.8.6" ]
        jdk: [ "temurin" ]
    env:
      AUTORELEASE_ARTIFACT: ${{ secrets.AUTORELEASE_ARTIFACT }}
    steps:
      - name: Check out source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          cache: maven
          distribution: ${{ matrix.jdk }}
          java-version: ${{ matrix.java }}
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Set up Maven if needed
        if: ${{ env.ACT }}
        uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f # v4.5
        with:
          maven-version: ${{ matrix.maven }}

      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV

      - name: Release with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.BUILD_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.BUILD_KEY }}
        run: |
          mvn -B -ntp -Prelease clean deploy -Dautorelease.artifact=${{ env.AUTORELEASE_ARTIFACT }} \
          -Drevision=${{ github.event.release.tag_name }} -DlogLevel=DEBUG -DtestLogLevel=DEBUG
