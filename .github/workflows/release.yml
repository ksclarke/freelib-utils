name: Maven Release

# Performs a Maven release using JDK 17 when a new GitHub release has been published
on:
  release:
    types: [ published ]

jobs:
  publish:
    name: Maven Artifact Publisher (JDK 17)
    runs-on: ubuntu-latest
    env:
      AUTORELEASE_ARTIFACT: ${{ secrets.AUTORELEASE_ARTIFACT }}
    steps:
      - name: Check out source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - name: Install JDK 17 and Maven
        uses: actions/setup-java@860f60056505705214d223b91ed7a30f173f6142 # v3.3.0
        with:
          cache: maven
          distribution: 'adopt'
          java-version: 17
      # If running locally in act, install Maven
      - name: Set up Maven if needed
        if: ${{ env.ACT }}
        uses: stCarolas/setup-maven@1d56b37995622db66cce1214d81014b09807fb5a # v4
        with:
          maven-version: 3.6.3
      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV
      - name: Install GPG secret key
        run: |
          cat <(echo -e "${{ secrets.BUILD_KEY }}") | gpg --batch --import
      - name: Configure Maven
        uses: s4u/maven-settings-action@60912582505985be4cc55d2b890eb32767f8de5f # v2.8.0
        with:
          servers: |
            [{
              "id": "ossrh",
              "username": "${{ secrets.SONATYPE_USERNAME }}",
              "password": "${{ secrets.SONATYPE_PASSWORD }}"
            }]
      - name: Release with Maven
        run: |
          mvn --no-transfer-progress --batch-mode \
          -DlogLevel=DEBUG -DtestLogLevel=DEBUG \
          -Dgpg.passphrase=${{ secrets.BUILD_PASSPHRASE }} \
          -Drevision=${{ github.event.release.tag_name }} \
          -Dautorelease.artifact=${{ env.AUTORELEASE_ARTIFACT }} \
          -Dorg.slf4j.simpleLogger.log.net.sourceforge.pmd=error \
          -Prelease \
          clean deploy
